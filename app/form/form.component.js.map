{"version":3,"file":"form.component.js","sourceRoot":"","sources":["form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+B,eAAe,CAAC,CAAA;AAC/C,uBAAkE,iBAAiB,CAAC,CAAA;AACpF,+BAA4B,8BAC5B,CAAC,CADyD;AAC1D,+BAA4B,8BAC5B,CAAC,CADyD;AAE1D,mCAA+B,sCAE/B,CAAC,CAFoE;AAQrE;IAME,uBAAoB,EAAe,EAAU,EAAoB;QAA7C,OAAE,GAAF,EAAE,CAAa;QAAU,OAAE,GAAF,EAAE,CAAkB;QAE/D,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC;YACrB,KAAK,EAAO,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;YACrC,SAAS,EAAG,CAAC,EAAE,EAAE,8BAAa,CAAC,UAAU,CAAC;YAC1C,QAAQ,EAAI,CAAC,EAAE,CAAC;YAChB,WAAW,EAAC,CAAC,EAAE,CAAC;YAChB,OAAO,EAAK,EAAE,CAAC,KAAK,CAAC;gBACP,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;aACpC,CAAC;YACd,UAAU,EAAE,EAAE,CAAC,KAAK,CAAC;gBACP,EAAE,CAAC,KAAK,CAAC;oBACP,GAAG,EAAI,CAAC,EAAE,EAAE,mBAAU,CAAC,QAAQ,CAAC;oBAChC,KAAK,EAAE,CAAC,EAAE,CAAC;iBACZ,CAAC;aACH,CAAC;YACd,IAAI,EAAQ,CAAC,EAAE,EAAE,mBAAU,CAAC,OAAO,CAAC;oBACtB,mBAAU,CAAC,QAAQ;oBACnB,8BAAa,CAAC,IAAI;iBAEnB,CAAC,CAAC;SAChB,CAAC,CAAC;QAEH,mDAAmD;QACnD,IAAI,CAAC,mBAAmB,GAAiB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,sBAAsB,GAAiB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACjF,CAAC;IAED,wCAAgB,GAAhB;QACE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,2CAAmB,GAAnB;QACE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,kCAAU,GAAV,UAAW,QAAQ;QACjB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC;IACvD,CAAC;IAlDH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,WAAW,EAAE,qBAAqB;YAClC,SAAS,EAAE,CAAC,qCAAgB,CAAC;SAC9B,CAAC;;qBAAA;IA8CF,oBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,qBAAa,gBA6CzB,CAAA","sourcesContent":["import {Component, Input} from 'angular2/core';\nimport {ControlGroup, ControlArray, FormBuilder, Validators} from 'angular2/common';\nimport {DateValidator} from '../validators/date.validator'\nimport {IsbnValidator} from '../validators/isbn.validator'\nimport {Book} from '../../domain/book'\nimport {BookStoreService} from '../services/books/book-store.service'\n\n@Component({\n  selector: 'book-form',\n  moduleId: module.id,\n  templateUrl: 'form.component.html',\n  providers: [BookStoreService]\n})\nexport class FormComponent {\n\n  myForm: ControlGroup;\n  authorsControlArray: ControlArray;\n  thumbnailsControlArray: ControlArray;\n\n  constructor(private fb: FormBuilder, private bs: BookStoreService) {\n\n    this.myForm = fb.group({\n      title:      ['', Validators.required],\n      published:  ['', DateValidator.germanDate],\n      subtitle:   [''],\n      description:[''],\n      authors:    fb.array([\n                    fb.control('', Validators.required)\n                  ]),\n      thumbnails: fb.array([\n                    fb.group({\n                      url:   ['', Validators.required],\n                      title: ['']\n                    })\n                  ]),\n      isbn:       ['', Validators.compose([\n                    Validators.required,\n                    IsbnValidator.isbn\n                    /* TODO Async check if isbn exists */\n                  ])]\n    });\n\n    // this allows us to manipulate the form at runtime\n    this.authorsControlArray = <ControlArray>this.myForm.controls['authors'];\n    this.thumbnailsControlArray = <ControlArray>this.myForm.controls['thumbnails'];\n  }\n\n  addAuthorControl(){\n    this.authorsControlArray.push(this.fb.control(''));\n  }\n\n  addThumbnailControl(){\n    this.thumbnailsControlArray.push(this.fb.group({url: [''], title: ['']}));\n  }\n\n  submitForm(formData){\n    this.bs.create(formData.value).subscribe(res => res);\n  }\n}\n"]}