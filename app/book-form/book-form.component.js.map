{"version":3,"file":"book-form.component.js","sourceRoot":"","sources":["../../home/travis/build/Angular2Buch/TMP/BookMonkey/tmp/broccoli_type_script_compiler-input_base_path-nvpSMSrK.tmp/0/src/app/book-form/book-form.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, FormArray, REACTIVE_FORM_DIRECTIVES, Validators } from '@angular/forms';\nimport { DateValidator } from '../validators/date.validator';\nimport { IsbnValidator } from '../validators/isbn.validator';\nimport { Book } from '../domain/book';\nimport { BookStoreService } from '../services/books/book-store.service';\n\n@Component({\n  selector: 'book-form',\n  moduleId: module.id,\n  templateUrl: 'book-form.component.html',\n  providers: [BookStoreService],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n})\nexport class BookFormComponent implements OnInit {\n  myForm: FormGroup;\n  authorsFormArray: FormArray;\n  thumbnailsFormArray: FormArray;\n  isUpdatingBook: boolean;\n\n  constructor(\n    private fb: FormBuilder, \n    private bs: BookStoreService,\n    private route: ActivatedRoute\n  ) {\n    this.isUpdatingBook = false;\n    this.initBook();\n  }\n\n  ngOnInit():void {\n    this.route.params.subscribe(params => {\n      var isbn = params['isbn'];\n    \n      if(isbn) {\n        this.isUpdatingBook = true;\n        this.bs.getSingle(isbn)\n          .subscribe(b => this.initBook(b));\n      }\n    });\n  }\n\n  initBook(book?:Book){\n    if(!book) book = new Book('', '', [''], new Date(), '', 0, [{url:'', title: ''}], '');\n\n    this.myForm = this.fb.group({\n      title: [book.title, Validators.required],\n      subtitle: [book.subtitle],\n      isbn: [book.isbn, Validators.compose([\n        Validators.required\n        /*\n        TODO: Add IsbnValidator.isbn\n        TODO: Add Async check if isbn exists\n        */\n      ])],\n      description: [book.description],\n      authors: this.fb.array(book.authors, Validators.required),\n      thumbnails: this.fb.array(\n        book.thumbnails.map(\n          t => this.fb.group({\n            url: this.fb.control(t.url, Validators.required),\n            title: this.fb.control(t.title)\n          })\n        )\n      ),\n      published: [book.published] // , DateValidator.germanDate\n    });\n        \n    // this allows us to manipulate the form at runtime\n    this.authorsFormArray = <FormArray>this.myForm.controls['authors'];\n    this.thumbnailsFormArray = <FormArray>this.myForm.controls['thumbnails'];\n  }\n\n  addAuthorControl(){\n    this.authorsFormArray.push(this.fb.control(''));\n  }\n\n  addThumbnailControl(){\n    this.thumbnailsFormArray.push(this.fb.group({url: [''], title: ['']}));\n  }\n\n  submitForm(formData){\n    this.isUpdatingBook \n      ? this.bs.update(formData.value)\n               .subscribe(res => res)\n      : this.bs.create(formData.value)\n               .subscribe(res => res)\n  }\n}"]}