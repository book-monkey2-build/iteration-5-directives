{"version":3,"file":"book-details.component.js","sourceRoot":"","sources":["book-details.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+B,eAAe,CAAC,CAAA;AAC/C,uBAAqD,iBAAiB,CAAC,CAAA;AAEvE,mCAA+B,sCAAsC,CAAC,CAAA;AACtE,0BAAuB,8BAEvB,CAAC,CAFoD;AAUrD;IAGE,8BAAoB,MAAmB,EAAU,EAAoB,EAAU,MAAc;QAAzE,WAAM,GAAN,MAAM,CAAa;QAAU,OAAE,GAAF,EAAE,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEjG,uCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aACvC,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,IAAI,GAAG,GAAG,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IAED,wCAAS,GAAT,UAAU,GAAW;QACnB,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,yCAAU,GAAV;QAAA,iBAKC;QAJC,EAAE,CAAA,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAA,CAAC;YACnC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBAC/B,SAAS,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IA3BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,WAAW,EAAE,6BAA6B;YAC1C,SAAS,EAAE,CAAC,qCAAgB,CAAC;YAC7B,UAAU,EAAE,CAAC,0BAAiB,CAAC;YAC/B,KAAK,EAAE,CAAC,oBAAQ,CAAC;SAClB,CAAC;;4BAAA;IAqBF,2BAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,4BAAoB,uBAoBhC,CAAA","sourcesContent":["import {Component, Input} from 'angular2/core';\nimport {Router, RouteParams, ROUTER_DIRECTIVES} from 'angular2/router';\nimport {Book} from '../domain/book';\nimport {BookStoreService} from '../services/books/book-store.service';\nimport {IsbnPipe} from '../pipes/isbn-pipe/isbn-pipe'\n\n@Component({\n  selector: 'book-details',\n  moduleId: module.id,\n  templateUrl: 'book-details.component.html',\n  providers: [BookStoreService],\n  directives: [ROUTER_DIRECTIVES],\n  pipes: [IsbnPipe]\n})\nexport class BookDetailsComponent {\n  book: Book;\n\n  constructor(private params: RouteParams, private bs: BookStoreService, private router: Router) {}\n\n  ngOnInit(){\n    this.bs.getSingle(this.params.get('isbn'))\n      .subscribe(res => this.book = res);\n  }\n\n  getRating(num: number){\n    return new Array(num);\n  }\n\n  deleteBook(){\n    if(confirm(\"Buch wirklich lÃ¶schen?\")){\n       this.bs.delete(this.params.get('isbn'))\n              .subscribe(res => this.router.navigate(['../List']));\n    }\n  }\n}\n"]}