{"version":3,"file":"active-class.directive.js","sourceRoot":"","sources":["active-class.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAK9D;IAAA;IAkBA,CAAC;IApBD;QAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC;;4BAAA;IAoBzC,2BAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,4BAAoB,uBAkBhC,CAAA","sourcesContent":["import { Directive, Input, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Directive({ selector: '[activeClass]' })\n\nexport class ActiveClassDirective {\n  /*\n  @Input() activeClass: string;\n  @Input() routerLink: any;\n\n  constructor(private _router: Router){ }\n\n  @HostBinding('class.active') get isActive() : boolean {\n    return this._router.isRouteActive(this._router.generate(this.routerLink));\n  }*/\n\n  /* Host-Bindings werden im Moment VOR den Inputs ausgef체hrt. Das soll sich 채ndern.\n  Bis dahin m체ssen wir die CSS-Klasse statisch in der Direktive hinterlegen.\n  Sp채ter verwenden wir den folgenden auskommentierten Weg.\n\n  @HostBinding('class.' + this.activeClass) get isActive() : boolean {\n    return this._router.isRouteActive(this._router.generate(this.routerLink));\n  }*/\n}\n"]}