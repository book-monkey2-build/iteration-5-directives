{"version":3,"file":"isbn.validator.js","sourceRoot":"","sources":["../../home/travis/build/Angular2Buch/TMP/BookMonkey/tmp/broccoli_type_script_compiler-input_base_path-b2Xn4SmD.tmp/0/src/app/shared/isbn.validator.ts"],"names":[],"mappings":";AAEA,sBAA6B,OAAoB;IAC/C,IAAI,eAAe,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACvD,IAAI,WAAW,GAAG,wBAAwB,CAAC;IAE3C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,GAAG;QAChD,YAAY,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;KAC/B,CAAA;AACH,CAAC;AAPe,oBAAY,eAO3B,CAAA","sourcesContent":["import { FormControl } from '@angular/forms';\n\nexport function validateIsbn(control: FormControl): {[error: string]:any} {\n  let isolatedNumbers = control.value.replace(/\\D/g, '');\n  let isbnPattern = /(^\\d{10}$)|(^\\d{13}$)/g;\n  \n  return isbnPattern.test(isolatedNumbers) ? null : {\n    validateIsbn: { valid: false }\n  }\n}"]}